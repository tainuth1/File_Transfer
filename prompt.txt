Generate website with my requrment gave to u## User Stories Backlog: គេហទំព័រផ្សព្វផ្សាយសម្រាប់ Rok Doctor**Summary:** គេហទំព័រផ្សព្វផ្សាយនេះមានគោលបំណងទាក់ទាញអតិថិជន (អ្នកប្រើប្រាស់ Mobile App) និងម្ចាស់ផលិតផល (គ្រូពេទ្យ គ្លីនិក ឱសថស្ថាន មន្ទីរពេទ្យ) ឱ្យស្វែងយល់ និងប្រើប្រាស់ Platform Rok Doctor។### ១. User Stories សម្រាប់អ្នកទស្សនាទូទៅ (General Visitors)-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់ឃើញទិដ្ឋភាពទូទៅនៃ Rok Doctor (តើវាជាអ្វី និងផ្តល់អ្វីខ្លះ) ដើម្បីអាចយល់ពីគោលបំណងរបស់ Platform។-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់ស្វែងយល់ពីអត្ថប្រយោជន៍នៃការប្រើប្រាស់ Rok Doctor សម្រាប់អតិថិជន ដើម្បីអាចដឹងថាហេតុអ្វីខ្ញុំគួរប្រើ Mobile App។-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់ស្វែងយល់ពីអត្ថប្រយោជន៍នៃការប្រើប្រាស់ Rok Doctor សម្រាប់ម្ចាស់ផលិតផល (Product Owners) ដើម្បីអាចដឹងថាហេតុអ្វីខ្ញុំគួរចុះឈ្មោះអាជីវកម្មរបស់ខ្ញុំ។-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់មើលវីដេអូ ឬរូបភាពបង្ហាញពីរបៀបដែល Platform ដំណើរការ ដើម្បីអាចយល់ពីបទពិសោធន៍អ្នកប្រើប្រាស់។-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់អានទីបន្ទាល់ (Testimonials) ពីអ្នកប្រើប្រាស់ ឬម្ចាស់ផលិតផលផ្សេងទៀត ដើម្បីអាចជឿទុកចិត្តលើ Platform។-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់ស្វែងរកចម្លើយចំពោះសំណួរដែលសួរញឹកញាប់ (FAQ) ដើម្បីអាចទទួលបានព័ត៌មានរហ័ស។-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់ស្វែងរកព័ត៌មានទំនាក់ទំនង (លេខទូរស័ព្ទ អ៊ីមែល) ដើម្បីអាចទាក់ទងក្រុមការងារ Rok Doctor។### ២. User Stories សម្រាប់អតិថិជនដែលមានសក្តានុពល (Potential Clients - Mobile App Users)-   **US:** ក្នុងនាមជាអតិថិជនដែលមានសក្តានុពល ខ្ញុំចង់ឃើញមុខងារសំខាន់ៗរបស់ Mobile App (ដូចជាការណាត់ជួប, Symptom Checker, ការបញ្ជាទិញថ្នាំ) ដើម្បីអាចដឹងពីអ្វីដែលខ្ញុំអាចធ្វើបាន។-   **US:** ក្នុងនាមជាអតិថិជនដែលមានសក្តានុពល ខ្ញុំចង់ឃើញរូបថតអេក្រង់ (Screenshots) នៃ Mobile App ដើម្បីអាចមើលឃើញចំណុចប្រទាក់អ្នកប្រើប្រាស់។-   **US:** ក្នុងនាមជាអតិថិជនដែលមានសក្តានុពល ខ្ញុំចង់ស្វែងរកតំណភ្ជាប់សម្រាប់ទាញយក Mobile App (App Store/Play Store) ដើម្បីអាចដំឡើងកម្មវិធីបានយ៉ាងងាយស្រួល។-   **US:** ក្នុងនាមជាអតិថិជនដែលមានសក្តានុពល ខ្ញុំចង់អានអត្ថបទ ឬគន្លឹះសុខភាព ដើម្បីអាចទទួលបានព័ត៌មានមានប្រយោជន៍។### ៣. User Stories សម្រាប់ម្ចាស់ផលិតផលដែលមានសក្តានុពល (Potential Product Owners - Doctors, Clinics, Pharmacies, Hospitals)-   **US:** ក្នុងនាមជាម្ចាស់ផលិតផលដែលមានសក្តានុពល ខ្ញុំចង់ស្វែងយល់ពីរបៀបដែល Rok Doctor អាចជួយអាជីវកម្មរបស់ខ្ញុំ (បង្កើនការណាត់ជួប/ការលក់ គ្រប់គ្រងប្រតិបត្តិការ) ដើម្បីអាចមើលឃើញតម្លៃអាជីវកម្ម។-   **US:** ក្នុងនាមជាម្ចាស់ផលិតផលដែលមានសក្តានុពល ខ្ញុំចង់ឃើញមុខងារសំខាន់ៗនៃ Web Admin Dashboard (ដូចជាការគ្រប់គ្រងកាលវិភាគ ស្តុក របាយការណ៍) ដើម្បីអាចដឹងពីអ្វីដែលខ្ញុំអាចគ្រប់គ្រងបាន។-   **US:** ក្នុងនាមជាម្ចាស់ផលិតផលដែលមានសក្តានុពល ខ្ញុំចង់មើលព័ត៌មានលម្អិតអំពីគម្រោងជាវ (Subscription Plans) និងតម្លៃ ដើម្បីអាចជ្រើសរើសគម្រោងដែលសមស្រប។-   **US:** ក្នុងនាមជាម្ចាស់ផលិតផលដែលមានសក្តានុពល ខ្ញុំចង់ស្វែងរកតំណភ្ជាប់សម្រាប់ចុះឈ្មោះជា Product Owner ដើម្បីអាចចាប់ផ្តើមប្រើប្រាស់ Platform។-   **US:** ក្នុងនាមជាម្ចាស់ផលិតផលដែលមានសក្តានុពល ខ្ញុំចង់អានករណីសិក្សា (Case Studies) ឬរឿងជោគជ័យរបស់អាជីវកម្មផ្សេងទៀតដែលប្រើ Rok Doctor ដើម្បីអាចទទួលបានការបំផុសគំនិត។### ៤. User Stories សម្រាប់គម្រោងជាវ (Subscription Plans) - សម្រាប់ម្ចាស់ផលិតផល-   **US:** ក្នុងនាមជាម្ចាស់ផលិតផលដែលមានសក្តានុពល ខ្ញុំចង់ស្វែងយល់ពី "គម្រោងឥតគិតថ្លៃ" (Free Plan) របស់ Rok Doctor ដើម្បីអាចចាប់ផ្តើមប្រើប្រាស់ Platform ដោយគ្មានការចំណាយដំបូង។    -   **Marketing Description:** "ចាប់ផ្តើមដំណើរឌីជីថលរបស់អ្នកជាមួយ Rok Doctor ដោយឥតគិតថ្លៃ! ទទួលបានមុខងារសំខាន់ៗដើម្បីគ្រប់គ្រងអាជីវកម្មសុខភាពរបស់អ្នកយ៉ាងងាយស្រួល និងឈានទៅដល់អតិថិជនកាន់តែច្រើន។"    -   **មុខងារសំខាន់ៗ (Key Features):**        -   ការគ្រប់គ្រងការណាត់ជួបមូលដ្ឋាន (Basic Appointment Management)        -   ការចុះបញ្ជីផលិតផល/សេវាកម្មមានកំណត់ (Limited Product/Service Listings)        -   ទម្រង់អាជីវកម្មស្តង់ដារ (Standard Business Profile)        -   ការចូលប្រើផ្ទាំងគ្រប់គ្រងមូលដ្ឋាន (Basic Dashboard Access)        -   ការគាំទ្រតាមរយៈអ៊ីមែល (Email Support)-   **US:** ក្នុងនាមជាម្ចាស់ផលិតផលដែលមានសក្តានុពល ខ្ញុំចង់ស្វែងយល់ពី "គម្រោងកម្រិតខ្ពស់" (Upgrade Plans - Premium/Pro) របស់ Rok Doctor ដើម្បីអាចពង្រីកអាជីវកម្ម និងទទួលបានអត្ថប្រយោជន៍កាន់តែច្រើន។    -   **Marketing Description:** "ដោះសោសក្តានុពលពេញលេញនៃអាជីវកម្មរបស់អ្នក! គម្រោងកម្រិតខ្ពស់របស់ Rok Doctor ផ្តល់ជូននូវមុខងារពិសេសៗ ការវិភាគស៊ីជម្រៅ និងការគាំទ្រជាអាទិភាព ដើម្បីជំរុញកំណើន ប្រសិទ្ធភាព និងភាពលេចធ្លោរបស់អាជីវកម្មអ្នក។"    -   **មុខងារសំខាន់ៗ (Key Features):**        -   ការណាត់ជួបគ្មានដែនកំណត់ (Unlimited Appointments)        -   ការចុះបញ្ជីផលិតផល/សេវាកម្មកម្រិតខ្ពស់ (Enhanced Product/Service Listings)        -   ការដាក់បង្ហាញទម្រង់អាជីវកម្មពិសេស (Premium Profile Placement)        -   ការវិភាគទិន្នន័យស៊ីជម្រៅ និងរបាយការណ៍ (Advanced Analytics & Reporting)        -   ការរួមបញ្ចូលការហៅជាវីដេអូ (Video Call Integration)        -   ឧបករណ៍ទីផ្សារ និងការផ្សព្វផ្សាយ (Marketing & Promotion Tools)        -   ការគាំទ្រជាអាទិភាព (Priority Support)        -   ការគ្រប់គ្រងបុគ្គលិក (Staff Management)        -   ការជូនដំណឹងតាមរយៈ SMS/Push Notification (SMS/Push Notification Integration)### ៥. មុខងាររួម (Shared Functionalities)-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់ឱ្យគេហទំព័រមានល្បឿនលឿន និងឆ្លើយតប (Responsive) នៅលើឧបករណ៍ផ្សេងៗ (ទូរស័ព្ទ ថេប្លេត កុំព្យូទ័រ) ដើម្បីអាចទទួលបានបទពិសោធន៍ល្អបំផុត។-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់ឱ្យគេហទំព័រមាន SEO ល្អ ដើម្បីអាចស្វែងរក Rok Doctor តាមរយៈ Search Engines។-   **US:** ក្នុងនាមជាអ្នកទស្សនាគេហទំព័រ ខ្ញុំចង់ឱ្យគេហទំព័រមានប៊ូតុង "Call to Action" ច្បាស់លាស់ (ឧទាហរណ៍ "ទាញយកកម្មវិធី", "ចុះឈ្មោះជាដៃគូ") ដើម្បីអាចបន្តទៅជំហានបន្ទាប់។# Next.js Project Overview for Rok Doctor Marketing WebsiteThis document outlines the recommended project structure and technology stack for the Rok Doctor marketing website, built with Next.js App Router.## 1. Project StructureThe project follows a modular and scalable structure, leveraging Next.js App Router conventions.\`\`\`rok-doctor-marketing-website/├── app/│   ├── page.tsx                # Main landing page (Home)│   ├── layout.tsx              # Root layout for the entire application (e.g., global header/footer)│   ├── globals.css             # Global styles (Tailwind CSS base)│   ├── api/                    # Route Handlers for server-side API logic│   │   ├── plans/│   │   │   └── route.ts        # API endpoint to fetch subscription plans│   │   ├── testimonials/│   │   │   └── route.ts        # API endpoint to fetch testimonials│   │   └── contact/│   │       └── route.ts        # API endpoint for contact form submission│   └── (marketing)/            # Route group for marketing-specific pages (optional, for future expansion)│       ├── about/│       │   └── page.tsx│       ├── blog/│       │   ├── page.tsx        # Blog listing page│       │   └── [slug]/│       │       └── page.tsx    # Individual blog post page│       └── contact/│           └── page.tsx├── components/│   ├── ui/                     # Shadcn UI components (e.g., Button, Card, Dialog)│   │   ├── button.tsx│   │   ├── card.tsx│   │   └── ...│   ├── layout/                 # Layout-specific components (e.g., Header, Footer, Navbar)│   │   ├── site-header.tsx│   │   ├── site-footer.tsx│   │   └── main-nav.tsx│   ├── marketing/              # Components specific to the marketing website sections│   │   ├── hero-section.tsx│   │   ├── features-section.tsx│   │   ├── how-it-works-section.tsx│   │   ├── testimonials-section.tsx│   │   ├── subscription-plans-section.tsx│   │   ├── faq-section.tsx│   │   ├── call-to-action.tsx│   │   └── blog-preview.tsx│   ├── common/                 # Reusable, general-purpose components│   │   ├── section-heading.tsx│   │   ├── icon-card.tsx│   │   └── loading-spinner.tsx│   └── providers/              # Context providers (e.g., ThemeProvider)│       └── theme-provider.tsx├── lib/│   ├── api.ts                  # Centralized API client (e.g., for fetching data from JSON Server)│   ├── utils.ts                # General utility functions (e.g., `cn` for Tailwind classes)│   └── constants.ts            # Application-wide constants├── hooks/│   ├── use-marketing-data.ts   # Custom hook for fetching marketing data│   └── use-form.ts             # Custom hook for form handling├── store/                      # Zustand stores for global state management│   └── marketing-store.ts      # Example store for marketing-related state├── public/│   ├── images/                 # Static images (e.g., logo, hero images, feature icons)│   │   ├── logo.svg│   │   ├── hero-bg.jpg│   │   └── ...│   └── favicon.ico├── types/                      # TypeScript type definitions│   ├── index.ts│   ├── marketing.ts            # Types for marketing data (features, plans, testimonials)│   └── api.ts                  # Types for API responses├── next.config.js              # Next.js configuration├── tailwind.config.ts          # Tailwind CSS configuration├── tsconfig.json               # TypeScript configuration└── package.json                # Project dependencies and scripts\`\`\`### Key Folder Explanations:*   **`app/`**: Contains all route-based files.    *   **Route Groups `(marketing)`**: Used to organize related routes (e.g., `about`, `blog`, `contact`) without affecting the URL path.    *   **`api/`**: Houses Next.js Route Handlers, which act as backend API endpoints. These are ideal for fetching data, handling form submissions, or interacting with external services.*   **`components/`**: Stores all reusable React components, categorized for better organization.    *   **`ui/`**: For components imported from `shadcn/ui`.    *   **`marketing/`**: For components specific to the marketing website's sections.*   **`lib/`**: Contains utility functions, API clients, and other helper modules.*   **`hooks/`**: Custom React hooks to encapsulate reusable logic.*   **`store/`**: Dedicated to Zustand stores for managing global client-side state.*   **`public/`**: For static assets like images and favicons.*   **`types/`**: Centralized location for TypeScript type definitions.## 2. Technology StackThe Rok Doctor marketing website will be built using the following modern and popular technologies:*   **Next.js (App Router)**: A React framework for building full-stack web applications. It provides server-side rendering (SSR), static site generation (SSG), API routes, and optimized performance [^1][^2][^3]. The App Router is chosen for its flexibility, performance benefits, and support for Server Components.*   **React**: A JavaScript library for building user interfaces.*   **TypeScript**: A strongly typed superset of JavaScript that enhances code quality and developer experience.*   **Tailwind CSS**: A utility-first CSS framework for rapidly building custom designs. It allows for highly customizable and responsive styling directly in JSX [^vercel_knowledge_base].*   **Zustand**: A fast, lightweight, and scalable state-management solution for React. It's chosen for its simplicity, minimal boilerplate, and excellent performance, making it ideal for managing client-side UI state.*   **JSON Server**: A lightweight tool to create a full fake REST API in less than a minute. It's perfect for rapid prototyping and local development, allowing frontend development to proceed independently of the backend.## 3. Data Management with JSON ServerFor local development and prototyping, we will use `json-server` to simulate our API endpoints.### `db.json` StructureThe `db.json` file will contain all the mock data needed for the marketing website.
